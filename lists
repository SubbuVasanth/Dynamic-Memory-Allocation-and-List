#include <stdio.h>
#include <string.h>

void display_students(char students[][50], int count) {
    printf("Student list: [");
    for (int i = 0; i < count; i++) {
        printf("%s", students[i]);
        if (i < count - 1) {
            printf(", ");
        }
    }
    printf("]\n");
}

int main() {
    int MAX_STUDENTS=100;
    char students[MAX_STUDENTS][50];
    int count = 0;
    int choice;

    while (1) {
        printf("\n1. Create a list of students\n");
        printf("2. Insert a student\n");
        printf("3. Delete a student\n");
        printf("4. Display students\n");
        printf("5. Search for a student\n");
        printf("6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                if (1) {
                    int num_students;
                    printf("Enter number of students to add (max %d): ", MAX_STUDENTS - count);
                    scanf("%d", &num_students);

                    if (num_students + count > MAX_STUDENTS) {
                        printf("Exceeds maximum student limit!\n");
                        break;
                    }

                    for (int i = 0; i < num_students; i++) {
                        printf("Enter student name %d: ", i + 1);
                        scanf("%s", students[count]);
                        count++;
                    }
                } else {
                    printf("Student list is full!\n");
                }
                break;

            case 2:
                if (count < MAX_STUDENTS) {
                    char name[50];
                    int position;
                    printf("Enter student name: ");
                    scanf("%s", name);
                    printf("Enter position (0 to %d): ", count);
                    scanf("%d", &position);
                    if (position >= 0 && position <= count) {
                        for (int i = count; i > position; i--) {
                            strcpy(students[i], students[i - 1]);
                        }
                        strcpy(students[position], name);
                        count++;
                    } else {
                        printf("Invalid position!\n");
                    }
                } else {
                    printf("Student list is full!\n");
                }
                break;

            case 3: 
                if (count > 0) {
                    int position;
                    printf("Enter position to delete (0 to %d): ", count - 1);
                    scanf("%d", &position);
                    if (position >= 0 && position < count) {
                        for (int i = position; i < count - 1; i++) {
                            strcpy(students[i], students[i + 1]);
                        }
                        count--;
                    } else {
                        printf("Invalid position!\n");
                    }
                } else {
                    printf("No students to delete!\n");
                }
                break;

            case 4: 
                display_students(students, count);
                break;

            case 5: 
                {
                    char name[50];
                    printf("Enter student name to search: ");
                    scanf("%s", name);
                    int found = 0;
                    for (int i = 0; i < count; i++) {
                        if (strcmp(students[i], name) == 0) {
                            printf("%s found at position %d\n", name, i);
                            found = 1;  // Mark as found
                            break;      // Exit the loop once found (optional)
                        }
                    }
                    if (!found) {
                        printf("%s not found!\n", name);
                    }
                }
                break;


            case 6: 
                printf("Exiting the program...\n");
                return 0;

            default:
                printf("Invalid choice! Please try again.\n");
        }
    }
}
